rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /user_profiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

     match /classes/{classId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.ownerId ||
        request.auth.uid in resource.data.students ||
        true
      );

      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;

      allow update: if request.auth != null && (
        request.auth.uid == resource.data.ownerId ||
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['students']) &&
          (
            (request.auth.uid in request.resource.data.students && !(request.auth.uid in resource.data.students)) ||
            (!(request.auth.uid in request.resource.data.students) && request.auth.uid in resource.data.students)
          )
        )
      );

      allow delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && (get(/databases/$(database)/documents/classes/$(classId)).data.ownerId == request.auth.uid || request.auth.uid in get(/databases/$(database)/documents/classes/$(classId)).data.students);
      }
    }

    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /grades/{gradeId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
     match /users/{userId}/notes/{noteId} {
      allow create: if request.auth.uid == userId;
      // You might also want to allow read, update, delete for the owner
      allow read, update, delete: if request.auth.uid == userId;
    }

    match /assignments/{assignmentId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
  }
}
